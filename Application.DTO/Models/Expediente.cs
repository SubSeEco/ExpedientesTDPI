//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Application.DTO.Models
{
    using System;
    using System.Collections.Generic;
    
    public partial class Expediente
    {
        public Expediente()
        {
            this.AsocEscritoDocto = new HashSet<AsocEscritoDocto>();
            this.AsocExpedienteOpcion = new HashSet<AsocExpedienteOpcion>();
            this.AsocExpeFirma = new HashSet<AsocExpeFirma>();
            this.Derivacion = new HashSet<Derivacion>();
            this.DetalleEstadoDiario = new HashSet<DetalleEstadoDiario>();
        }

        public int ExpedienteID { get; set; }
        public int TipoTramiteID { get; set; }
        public int CausaID { get; set; }
        public int UsuarioID { get; set; }
        public int UsuarioResponsableID { get; set; }
        public Nullable<System.DateTime> FechaExpediente { get; set; }
        public bool IsAdmisible { get; set; }
        public string Observacion { get; set; }
        public string Comentario { get; set; }
        public string NumeroOficio { get; set; }
        public int PlazoDias { get; set; }
        public bool IsHabil { get; set; }
        public bool IsTabla { get; set; }
        public bool IsFinalizado { get; set; }

        public virtual ICollection<AsocEscritoDocto> AsocEscritoDocto { get; set; }
        public virtual ICollection<AsocExpedienteOpcion> AsocExpedienteOpcion { get; set; }
        public virtual ICollection<AsocExpeFirma> AsocExpeFirma { get; set; }
        public virtual Causa Causa { get; set; }
        public virtual ICollection<Derivacion> Derivacion { get; set; }
        public virtual ICollection<DetalleEstadoDiario> DetalleEstadoDiario { get; set; }
        public virtual TipoTramite TipoTramite { get; set; }
        public virtual Usuario Usuario { get; set; }

        //Custom
        public bool IsPuedeEditar()
        {
            return !IsFinalizado;
        }

        public string GetDiasTranscurridos()
        {
            TimeSpan difference = DateTime.Now - FechaExpediente.Value;

            //int dias = difference.Days == 0 ? 1 : difference.Days;

            //return $"{difference.Days} de {PlazoDias}";
            return $"{difference.Days}";
        }

        //Custom

        public string GetOpcionesTramite()
        {
            List<string> lista = new List<string>();

            foreach (var item in AsocExpedienteOpcion)
            {
                lista = new List<string>();
                lista.Add(item.OpcionesTramite.Descripcion.Trim());
            }

            return string.Join("<br>", lista);
        }

        public bool IsTieneDocumentos()
        {
            return AsocEscritoDocto.Count > 0;
        }

        public string GetFirmas()
        {
            return "--falta--";

            //if (Firma.Count > 0)
            //{
            //    int total = Firma.Count;
            //    int ok = 0;

            //    foreach (var item in Firma)
            //    {
            //        if (item.AsocFirmaDocto.Count > 0 && item.AsocFirmaDocto != null)
            //        {
            //            foreach (var asoc in item.AsocFirmaDocto)
            //            {
            //                if (asoc.IsFirmado)
            //                {
            //                    ok++;
            //                }                            
            //            }

            //        }
            //    }


            //    return $"{ok} de {total}";
            //}
            //else
            //{
            //    return "N/A";
            //}
        }

        public bool IsResolucion()
        {
            return TipoTramiteID == (int)Domain.Infrastructure.TipoTramite.Resolucion;
        }

        public bool IsDisponibleResolucion(DateTime FechaEstadoDiario)
        {
            return IsResolucion() && FechaEstadoDiario.Date == FechaExpediente.Value.Date;
        }

    }
}
