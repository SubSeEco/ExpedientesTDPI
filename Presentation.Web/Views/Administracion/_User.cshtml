@model Application.DTO.Models.Usuario

@using resources = Infrastructure.Resources;
@using Enums = Domain.Infrastructure;

@{
    #region Perfiles
    var Perfiles = ViewBag.Perfiles as IList<Application.DTO.Models.Perfil>;

    List<int> perfilesExternos = new List<int>();
    perfilesExternos.Add((int)Enums.Perfil.Abogado);
    perfilesExternos.Add((int)Enums.Perfil.INAPI);
    perfilesExternos.Add((int)Enums.Perfil.SAG);

    List<int> perfilesInternos = new List<int>();
    perfilesInternos.Add((int)Enums.Perfil.Administrador);
    perfilesInternos.Add((int)Enums.Perfil.TDPI);
    #endregion

    string rutUsuario = (Model.IsClaveUnica) ? Model.Rut + "-" + Html.GetDv(Convert.ToInt32(Model.Rut)) : string.Empty;

    var TipoGeneroList = ViewBag.TipoGeneroList as IList<Application.DTO.Models.TipoGenero>;

}

<script type="text/javascript">
    //@@ sourceURL=_Derivar.cshtml
    var perINAPI = parseInt(@Html.EnumToInt(Enums.Perfil.INAPI));
    var perSAG = parseInt(@Html.EnumToInt(Enums.Perfil.SAG));
    var perTDPI = parseInt(@Html.EnumToInt(Enums.Perfil.TDPI));
    var perAdmin = parseInt(@Html.EnumToInt(Enums.Perfil.Administrador));
    var perAbogado = parseInt(@Html.EnumToInt(Enums.Perfil.Abogado));

    ; (function ($) {
        $(function () {

            $(".xCheckbox").bootstrapSwitch({
                onSwitchChange: function (event, state) {
                    if (state) {

                    } else {

                    }
                }
            });

            $(".chekPerfil").click(function () {
                var val = $(this).val();
                if ($(this).is(":checked"))
                {
                    if (val == perINAPI) {
                        $('#chk_' + perSAG).attr("disabled", true);
                        $('#chk_' + perAbogado).attr("disabled", true);
                    }

                    if (val == perSAG) {
                        $('#chk_' + perINAPI).attr("disabled", true);
                        $('#chk_' + perAbogado).attr("disabled", true);
                    }

                    if (val == perAbogado) {
                        $('#chk_' + perINAPI).attr("disabled", true);
                        $('#chk_' + perSAG).attr("disabled", true);
                    }

                } else {

                    $('.chekPerfil').attr("disabled", false);
                }
            });

            activateForm("btnUser", "frmUser",
                function () {



                    return true;
                },
                function () {

                    IsEdit = false;

                    if (xResultJsonData.Update == 1) {

                        var url = "/Administracion/Usuarios?autosearch=1";
                        showBlockUI(LinkRedirect(url));

                    } else if (xResultJsonData.Update == parseInt("@Convert.ToInt32(Enums.ReturnJson.FolioYaExiste)")) {

                        showBlockUIError("Ya existe Usuario, valide e intente nuevamente");
                        return false;

                    } else {
                        showBlockUI();
                        DialogClose();
                        $("#btnBuscar").trigger("click");
                    }



                });

            @if (Model.IsClaveUnica)
            {
                @:ValidarTelefonos();
            }

        });
    })(jQuery);

</script>

<div class="modal-body" style="padding-top: 6px;">

    <form class="form-horizontal" id="frmUser" method="post" action="@Url.Action("SaveUser", "Administracion")">
        @Html.AntiForgeryToken()
        @Html.HiddenFor(x => x.UsuarioID)
        @Html.HiddenFor(x => x.IsClaveUnica)
        @Html.HiddenFor(x => x.FechaRegistro)
        @Html.HiddenFor(x => x.Rut)
        @Html.Hidden("Signer", Model.Signer)

        @if (Model.IsClaveUnica)
        {
            <div class="form-group row">
                <label for="Rut" id="" class="col-md-4 col-form-label">Rut </label>
                <div class="col-md-8">
                    @Html.TextBox("_rut", rutUsuario, new { @class = "form-control", @maxlength = "100", @disabled = true })
                </div>
            </div>
        }

        <div class="form-group row">
            <label for="Nombres" id="" class="col-md-4 col-form-label">Nombres <span class="span-obligatorio">(*)</span></label>
            <div class="col-md-8">
                @Html.TextBoxFor(x => x.Nombres, new { @class = "form-control verificar", @maxlength = "100" })
            </div>
        </div>

        <div class="form-group row">
            <label for="Apellidos" id="" class="col-md-4 col-form-label">Apellidos <span class="span-obligatorio">(*)</span></label>
            <div class="col-md-8">
                @Html.TextBoxFor(x => x.Apellidos, new { @class = "form-control verificar", @maxlength = "100" })
            </div>
        </div>

        <div class="form-group row">
            <label for="TipoGeneroID" id="" class="col-md-4 col-form-label">Genero <span class="span-obligatorio">(*)</span></label>
            <div class="col-md-8">
                <select id="TipoGeneroID" name="TipoGeneroID" class="custom-select verificar" data-default="">
                    <option value="">@resources.GlobalResources.OptionInicial</option>
                    @foreach (var item in TipoGeneroList)
                    {
                        string selected = (item.TipoGeneroID == Model.TipoGeneroID) ? "selected='selected'" : "";
                        <option value="@item.TipoGeneroID" @selected>@item.Descripcion</option>
                    }
                </select>

            </div>
        </div>
        
        <div class="form-group row">
            <label for="Mail" id="" class="col-md-4 col-form-label">Mail <span class="span-obligatorio">(*)</span></label>
            <div class="col-md-8">
                @Html.TextBoxFor(x => x.Mail, new { @class = "form-control IsEmail verificar", @maxlength = "100" })
            </div>
        </div>

        @if (!Model.IsClaveUnica)
        {
            <div class="form-group row">
                <label for="AdID" id="" class="col-md-4 col-form-label">Usuario TDPI</label>
                <div class="col-md-8">
                    @Html.TextBoxFor(x => x.AdID, new { @class = "form-control", @maxlength = "100" })
                </div>
            </div>
        }
        else
        {
            <div class="form-group row">
                <label for="Mail" id="" class="col-md-4 col-form-label">Teléfono </label>
                <div class="col-md-8">
                    @Html.TextBoxFor(x => x.Telefono, new { @class = "form-control", @maxlength = "100" })
                </div>
            </div>
        }
        <div class="form-group row" style="margin-top: 0px !important;">
            <label for="Vigente" class="col-sm-4 col-form-label">Es Presidente</label>
            <div class="col-sm-8">
                @Html.Raw(Html.MyCheckbox(Model.IsPresidente, "IsPresidente", 0, "", "small", 0, false, false, ""))
            </div>
        </div>

        <div class="form-group row" style="margin-top: 0px !important;">
            <label for="Vigente" class="col-sm-4 col-form-label">Es Secretario(a)-Abogado(a)</label>
            <div class="col-sm-8">
                @Html.Raw(Html.MyCheckbox(Model.IsSecretarioAbogado, "IsSecretarioAbogado", 0, "", "small", 0, false, false, ""))
            </div>
        </div>

        @if (Model.AsocDocumentoUsuario.Count > 0)
        {
            var doc = Model.AsocDocumentoUsuario.OrderByDescending(x => x.DocumentoSistemaID).FirstOrDefault().DocumentoSistema; 
            int TipoDocumentoEnum = (int)Enums.TipoDocumento.CertificadoTituloAbogado;

            <fieldset class="x-fieldset">
                <legend class="celeste bold">Certificado de Título</legend>

                <div class="table-responsive">

                    <table class="@Html.GetBaseTableCSS()" id="">
                        <thead>
                            <tr>
                                <th class="ac" style="">Nombre Documento</th>
                                <th class="ac" style="">Descripción</th>
                                <th class="ac" style="">Fecha Carga</th>
                                <th class="ac" style="">Acciones</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td class="">@doc.NombreArchivoFisico</td>
                                <td style="max-width:200px" class="fixWord">@Html.SplitToUpper(doc.Descripcion)</td>
                                <td class="ac">@Html.DatetimeToString(doc.Fecha, "dd-MM-yyyy HH:mm")</td>
                                <td class="ac">

                                    <a style="margin-right:2px" href="javascript:void(0)"
                                        onclick='getDownloadFile(0, 0, "@doc.Hash.Trim()", @TipoDocumentoEnum)'
                                        class="x-title-t" title="@resources.GlobalResources.BtnDescargar">
                                        <i class="x-icon @Html.GetCSS(doc.NombreArchivoFisico)" style="cursor: pointer;"></i>
                                    </a>
                                </td>
                            </tr>
                        </tbody>
                    </table>

                </div>

                </fieldset>

        }


        <fieldset class="x-fieldset">
            <legend class="celeste">Asignación de Perfiles</legend>

            <table class="@Html.GetBaseTableCSS() " id="">
                <thead>
                    <tr>
                        <th class="ac" style="">Perfil</th>
                        <th class="ac nw" style="width:10%">Asignado</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Perfiles)
                    {
                        #region Parametros
                        if (Model.IsClaveUnica && !perfilesExternos.Contains(item.PerfilID))
                        {
                            continue;
                        }
                        if (!Model.IsClaveUnica && !perfilesInternos.Contains(item.PerfilID))
                        {
                            continue;
                        }

                        bool Seleccionado = false;
                        string selected = "";
                        string disabled = "";

                        if (Model.AsocUsuarioPerfil != null)
                        {
                            Seleccionado = Model.AsocUsuarioPerfil.Any(x => x.PerfilID == item.PerfilID);
                            selected = Seleccionado ? "checked='checked'" : "";
                        }

                        if (item.PerfilID == (int)Enums.Perfil.INAPI)
                        {
                            Seleccionado = Model.AsocUsuarioPerfil.Any(x => x.PerfilID == (int)Enums.Perfil.SAG);
                            disabled = Seleccionado ? "disabled='true'" : "";
                        }

                        if (item.PerfilID == (int)Enums.Perfil.SAG)
                        {
                            Seleccionado = Model.AsocUsuarioPerfil.Any(x => x.PerfilID == (int)Enums.Perfil.INAPI);
                            disabled = Seleccionado ? "disabled='true'" : "";
                        }
                        #endregion

                        <tr>
                            <td>@item.Descripcion</td>
                            <td class="ac">
                                <input type="checkbox" class="chekPerfil" name="PerfilIDs" value="@item.PerfilID" id="chk_@item.PerfilID" @selected @disabled/>
                                @*@Html.Raw(Html.MyCheckbox(Seleccionado, "PerfilIDs", item.PerfilID, "", "small", 0, false, false))*@
                            </td>
                        </tr>
                    }
                </tbody>

            </table>

        </fieldset>

    </form>

    <div class="modal-footer">
       <button id="btnUser" onclick="$('#frmUser').submit()" class="btn btn-default"><i class="x-icon x-icon-save2 icon-in-button"></i> @resources.GlobalResources.BtnGuardar</button><i class="x-icon-loader hide"></i>
        <button class="btn btn-default" data-dismiss="modal" type="button"  onclick="CloseDialog()"><i class="x-icon x-icon-cancel2 icon-in-button"></i> @resources.GlobalResources.BtnVolver</button>
    </div>

</div>
